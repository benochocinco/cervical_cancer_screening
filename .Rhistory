auc()
# Set seed for reproducibility
set.seed(123)
# Train boosted Support Vector Machine with Radial Basis Kernel to find optimal parameters
svm_radial_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "svmRadial",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
svm_radial_train_auc <- svm_radial_fit %>%
test_roc(data = train_cancer) %>%
auc()
svm_radial_test_auc <- svm_radial_fit %>%
test_roc(data = test_cancer) %>%
auc()
method <- c("Logistic Regression", "Boosted Logistic Regression", "Generalized Additive Model", "Linear SVM", "Radial Basis SVM")
train_auc <- c(logistic_train_auc, boosted_logistic_train_auc, gam_train_auc, svm_linear_train_auc, svm_radial_train_auc)
test_auc <- c(logistic_test_auc, boosted_logistic_test_auc, gam_test_auc, svm_linear_test_auc, svm_radial_test_auc)
glm_svm_results <- data.frame(Method = method, Train_AUC = train_auc, Test_AUC = test_auc)
kable(glm_svm_results, format = "markdown")
# Set seed for reproducibility
set.seed(123)
model_list <- list(Logistic_Regression = logistic_fit,
Boosted_Logistic_Regression = boosted_logistic_fit,
Generalized_Additive_Model = gam_fit,
Linear_SVM = svm_linear_fit,
Radial_Basis_SVM = svm_radial_fit)
model_list_train_roc <- model_list %>%
map(test_roc, data = train_cancer)
model_list_test_roc <- model_list %>%
map(test_roc, data = test_cancer)
col <- c("#000000", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
results_list_train_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_train_roc){
results_list_train_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_train_roc <- bind_rows(results_list_train_roc)
results_list_test_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_test_roc){
results_list_test_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_test_roc <- bind_rows(results_list_test_roc)
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_train_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Training ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_test_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Test ROC Curves")
# Set seed for reproducibility
set.seed(123)
# Train Random Forest
rf_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "rf",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
rf_train_auc <- rf_fit %>%
test_roc(data = train_cancer) %>%
auc()
rf_test_auc <- rf_fit %>%
test_roc(data = test_cancer) %>%
auc()
# Set seed for reproducibility
set.seed(123)
# Train Adaboost model
adaboost_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "adaboost",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
adaboost_train_auc <- adaboost_fit %>%
test_roc(data = train_cancer) %>%
auc()
adaboost_test_auc <- adaboost_fit %>%
test_roc(data = test_cancer) %>%
auc()
# Set seed for reproducibility
set.seed(123)
# Train Adaboost model
gbm_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "gbm",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
gbm_train_auc <- gbm_fit %>%
test_roc(data = train_cancer) %>%
auc()
gbm_test_auc <- gbm_fit %>%
test_roc(data = test_cancer) %>%
auc()
# Set seed for reproducibility
set.seed(123)
# Train Xgboost model
xgb_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "xgbTree",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
xgb_train_auc <- xgb_fit %>%
test_roc(data = train_cancer) %>%
auc()
xgb_test_auc <- xgb_fit %>%
test_roc(data = test_cancer) %>%
auc()
method <- c("Logistic Regression", "Random Forest", "Adaboost", "Gradient Boosting Machine", "eXtreme Gradient Boosting")
train_auc <- c(logistic_train_auc, rf_train_auc, adaboost_train_auc, gbm_train_auc, xgb_train_auc)
test_auc <- c(logistic_test_auc, rf_test_auc, adaboost_test_auc, gbm_test_auc, xgb_test_auc)
modern_ml_results <- data.frame(Method = method, Train_AUC = train_auc, Test_AUC = test_auc)
kable(modern_ml_results, format = "markdown")
# Set seed for reproducibility
set.seed(123)
model_list <- list(Logistic_Regression = logistic_fit,
Random_Forest = rf_fit,
Adaboost = adaboost_fit,
GBM = gbm_fit,
xGB = xgb_fit)
model_list_train_roc <- model_list %>%
map(test_roc, data = train_cancer)
model_list_test_roc <- model_list %>%
map(test_roc, data = test_cancer)
col <- c("#000000", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
results_list_train_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_train_roc){
results_list_train_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_train_roc <- bind_rows(results_list_train_roc)
results_list_test_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_test_roc){
results_list_test_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_test_roc <- bind_rows(results_list_test_roc)
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_train_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Training ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_test_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Test ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_test_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Test ROC Curves")
# Set seed for reproducibility
set.seed(123)
# Set seed within CV
ctrl$seeds <- xgb_fit$control$seeds
# Build down-sampled model
ctrl$sampling <- "down"
# Train Xgboost model
xgb_down_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "xgbTree",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
xgb_down_train_auc <- xgb_down_fit %>%
test_roc(data = train_cancer) %>%
auc()
xgb_down_test_auc <- xgb_down_fit %>%
test_roc(data = test_cancer) %>%
auc()
# Set seed for reproducibility
set.seed(123)
# Build down-sampled model
ctrl$sampling <- "up"
# Train Xgboost model
xgb_up_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "xgbTree",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
xgb_up_train_auc <- xgb_up_fit %>%
test_roc(data = train_cancer) %>%
auc()
xgb_up_test_auc <- xgb_up_fit %>%
test_roc(data = test_cancer) %>%
auc()
# Set seed for reproducibility
set.seed(123)
# Build down-sampled model
ctrl$sampling <- "smote"
# Train Xgboost model
xgb_smote_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "xgbTree",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
xgb_smote_train_auc <- xgb_smote_fit %>%
test_roc(data = train_cancer) %>%
auc()
xgb_smote_test_auc <- xgb_smote_fit %>%
test_roc(data = test_cancer) %>%
auc()
# Set seed for reproducibility
set.seed(123)
# Set seed within CV
ctrl$seeds <- xgb_fit$control$seeds
# Build down-sampled model
ctrl$sampling <- "down"
# Train Xgboost model
xgb_down_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "xgbTree",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
xgb_down_train_auc <- xgb_down_fit %>%
test_roc(data = train_cancer) %>%
auc()
xgb_down_test_auc <- xgb_down_fit %>%
test_roc(data = test_cancer) %>%
auc()
# Set seed for reproducibility
set.seed(123)
# Set seed within CV
ctrl$seeds <- xgb_fit$control$seeds
# Build down-sampled model
ctrl$sampling <- "up"
# Train Xgboost model
xgb_up_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "xgbTree",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
xgb_up_train_auc <- xgb_up_fit %>%
test_roc(data = train_cancer) %>%
auc()
xgb_up_test_auc <- xgb_up_fit %>%
test_roc(data = test_cancer) %>%
auc()
# Set seed for reproducibility
set.seed(123)
# Set seed within CV
ctrl$seeds <- xgb_fit$control$seeds
# Build down-sampled model
ctrl$sampling <- "smote"
# Train Xgboost model
xgb_smote_fit <- train(Biopsy ~ .,
data = train_cancer,
method = "xgbTree",
preProc = c("center", "scale"),
trControl = ctrl,
metric = "ROC")
# Record training and test AUC
xgb_smote_train_auc <- xgb_smote_fit %>%
test_roc(data = train_cancer) %>%
auc()
xgb_smote_test_auc <- xgb_smote_fit %>%
test_roc(data = test_cancer) %>%
auc()
method <- c("Logistic Regression", "xGB", "xGB Down-Sampling", "xGB Up-Sampling", "xGB SMOTE")
train_auc <- c(logistic_train_auc, xgb_train_auc, xgb_down_train_auc, xgb_up_train_auc, xgb_smote_train_auc)
test_auc <- c(logistic_test_auc, xgb_test_auc, xgb_down_test_auc, xgb_up_test_auc, xgb_smote_test_auc)
xgb_samp_results <- data.frame(Method = method, Train_AUC = train_auc, Test_AUC = test_auc)
kable(xgb_samp_results, format = "markdown")
write.csv(xgb_samp_results, "xgb_samp_results.csv")
# Set seed for reproducibility
set.seed(123)
model_list <- list(Logistic_Regression = logistic_fit,
xGB = xgb_fit,
xGB_Down = xgb_down_fit,
xGB_Up = xgb_up_fit,
xGB_SMOTE = xgb_smote_fit)
model_list_train_roc <- model_list %>%
map(test_roc, data = train_cancer)
model_list_test_roc <- model_list %>%
map(test_roc, data = test_cancer)
col <- c("#000000", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
results_list_train_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_train_roc){
results_list_train_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_train_roc <- bind_rows(results_list_train_roc)
results_list_test_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_test_roc){
results_list_test_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_test_roc <- bind_rows(results_list_test_roc)
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_train_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Training ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_test_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Test ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_test_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Test ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_train_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Training ROC Curves")
# Set seed for reproducibility
set.seed(123)
model_list <- list(Logistic_Regression = logistic_fit,
Random_Forest = rf_fit,
Adaboost = adaboost_fit,
GBM = gbm_fit,
xGB = xgb_fit)
model_list_train_roc <- model_list %>%
map(test_roc, data = train_cancer)
model_list_test_roc <- model_list %>%
map(test_roc, data = test_cancer)
col <- c("#000000", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
results_list_train_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_train_roc){
results_list_train_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_train_roc <- bind_rows(results_list_train_roc)
results_list_test_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_test_roc){
results_list_test_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_test_roc <- bind_rows(results_list_test_roc)
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_train_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Training ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_test_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Test ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_train_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Training ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_test_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Test ROC Curves")
# Set seed for reproducibility
set.seed(123)
model_list <- list(Logistic_Regression = logistic_fit,
xGB = xgb_fit,
xGB_Down = xgb_down_fit,
xGB_Up = xgb_up_fit,
xGB_SMOTE = xgb_smote_fit)
model_list_train_roc <- model_list %>%
map(test_roc, data = train_cancer)
model_list_test_roc <- model_list %>%
map(test_roc, data = test_cancer)
col <- c("#000000", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
results_list_train_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_train_roc){
results_list_train_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_train_roc <- bind_rows(results_list_train_roc)
results_list_test_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_test_roc){
results_list_test_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_test_roc <- bind_rows(results_list_test_roc)
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_train_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Training ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_test_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Test ROC Curves")
# Set seed for reproducibility
set.seed(123)
model_list <- list(Logistic_Regression = logistic_fit,
xGB = xgb_fit,
xGB_Down = xgb_down_fit,
xGB_Up = xgb_up_fit,
xGB_SMOTE = xgb_smote_fit)
model_list_train_roc <- model_list %>%
map(test_roc, data = train_cancer)
model_list_test_roc <- model_list %>%
map(test_roc, data = test_cancer)
col <- c("#000000", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
results_list_train_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_train_roc){
results_list_train_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_train_roc <- bind_rows(results_list_train_roc)
results_list_test_roc <- list(NA)
num_mod <- 1
for(the_roc in model_list_test_roc){
results_list_test_roc[[num_mod]] <-
data_frame(tpr = the_roc$sensitivities,
fpr = 1 - the_roc$specificities,
model = names(model_list)[num_mod])
num_mod <- num_mod + 1
}
results_df_test_roc <- bind_rows(results_list_test_roc)
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_train_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Training ROC Curves")
ggplot(aes(x = fpr,  y = tpr, group = model), data = results_df_test_roc) +
geom_line(aes(color = model), size = 1) +
scale_color_manual(values = col) +
geom_abline(intercept = 0, slope = 1, color = "gray", size = 1) +
theme_bw(base_size = 18) +
ggtitle("Test ROC Curves")
View(xgb_samp_results)
# Set seed for reproducibility
set.seed(123)
xgb_imp <- varImp(xgb_down_fit)
kable(xgb_imp$importance, format = 'markdown')
